sand2 <- read.table("C:/R_data/sand_example.csv", header=TRUE, sep=",",
na.strings="NA", dec=".", strip.white=TRUE)
library(relimp, pos=4)
showData(sand2, placement='-20+200', font=getRcmdr('logFont'), maxwidth=80,
maxheight=30)
Hist(sand2$sand, scale="frequency", breaks="Sturges", col="blue")
Boxplot(sand~landuse, data=sand2, id.method="y")
summary(sand2)
library(multcomp, pos=4)
library(abind, pos=4)
AnovaModel.1 <- aov(sand ~ landuse, data=sand2)
summary(AnovaModel.1)
numSummary(sand2$sand , groups=sand2$landuse, statistics=c("mean", "sd"))
View(sand2)
hist(data = sand, y = sand)
hist(data = sand2, y = sand)
?HIST
?hist
plot(depth~sand, data = sand2, ylim =c(50,-1), main = "Total Sand (%) by depth",
xlab = "Sand", ylab = "Depth")
hist(data = sand2, y = sand)
hist(sand2$sand)
hist(sand2$sand, col = 'blue', main = 'Histogram of Sand Content', ylab = 'Sand Content (%)')
hist(sand2$sand, col = 'blue', main = 'Histogram of Sand Content', xlab = 'Sand Content (%)')
library(ggplot2)
ggplot(data = sand2, aes(x = sand )) + geom_histogram()
?geom_histogram
ggplot(data = sand2, aes(x = sand )) + geom_histogram(bins = 10)
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 5)
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 10)
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 5)
hist(sand2$sand, col = 'blue', main = 'Histogram of Sand Content', xlab = 'Sand Content (%)')
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 5)
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 5, col = 'blue')
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 5, fill = 'blue')
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 10, fill = 'blue')
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 1, fill = 'blue')
#let's create a boxplot with ggplot
b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot
#wait no plot showed up - that's because we assigned the plot the object 'b'
b
#let's create a boxplot with ggplot
b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot
#let's create a boxplot with ggplot
b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot()
b
b + scale_color_brewer(fill = landuse)
b + scale_color_brewer()
b + scale_fill_identity()
#we can add color by assigning fill to a variable
lc <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = landuse))
lc
hist(sand2$sand, col = 'blue', main = 'Histogram of Sand Content', xlab = 'Sand Content (%)')
sand2 <- read.table("C:/R_data/sand_example.csv", header=TRUE, sep=",",
na.strings="NA", dec=".", strip.white=TRUE)
plot(depth~sand, data = sand2, ylim =c(50,-1), main = "Total Sand (%) by depth",
xlab = "Sand", ylab = "Depth")
hist(sand2$sand)
hist(sand2$sand, col = 'blue', main = 'Histogram of Sand Content', xlab = 'Sand Content (%)')
# this is a demo of how to use R editor with an R Commander Script
sand2 <- read.table("C:/R_data/sand_example.csv", header=TRUE, sep=",",
na.strings="NA", dec=".", strip.white=TRUE)
plot(depth~sand, data = sand2, ylim =c(50,-1), main = "Total Sand (%) by depth",
xlab = "Sand", ylab = "Depth")
hist(sand2$sand)
#change color and labels
hist(sand2$sand, col = 'blue', main = 'Histogram of Sand Content', xlab = 'Sand Content (%)')
# this is a demo of how to use a saved R script in R studio
sand2 <- read.table("C:/R_data/sand_example.csv", header=TRUE, sep=",",
na.strings="NA", dec=".", strip.white=TRUE)
plot(depth~sand, data = sand2, ylim =c(50,-1), main = "Total Sand (%) by depth",
xlab = "Sand", ylab = "Depth")
View(sand2)
hist(sand2$sand)
?hist
l <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot()
#wait no plot showed up - that's because we assigned the plot the object 'l'
l
#we can add color by assigning fill to a variable
lc <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = landuse))
lc
#we can make a more complicated graph by filling with another variable
lm <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = master))
lm
#we can make a more complicated graph by filling with another variable
lm <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = Master))
lm
lm <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = master))
lm
#we can add new command to the exsisting object
lm + scale_color_brewer()
#we can add new command to the exsisting object
lm + scale_color_brewer("rainbow")
#we can add new command to the exsisting object
lm + scale_color_grey()
?scale_color_brewer
#we can add new command to the exsisting object
lm + scale_color_brewer(palette = "Set1")
#we can add new command to the exsisting object
lm + scale_fill_brewer(palette = "Set1")
lm + scale_fill_grey()
lm + scale_fill_grey() + labs(x = "Landuse", y = "Sand Content (%)") +
scale_x_discrete(lables = c("Crop", "Pasture", "Range"))
?scale_x_discrete
lm + scale_fill_grey() + labs(x = "Landuse", y = "Sand Content (%)") +
scale_x_discrete(lables = c("crop" = "Crop", "pasture" ="Pasture", "range" = "Range"))
lm + scale_fill_grey() + labs(x = "Landuse", y = "Sand Content (%)") +
scale_x_discrete(breaks = c("crop", "pasture", "range"),
lables = c( "Crop", "Pasture", "Range"))
lm + scale_fill_grey() + labs(x = "Landuse", y = "Sand Content (%)") +
theme(axis.text.x = element_text(face="bold", color="#993333", size=14, angle=45),
axis.text.y = element_text(face="bold", color="#993333", size=14, angle=45))
library(knitr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
2
ggplot(data = sand2, aes(x = sand )) + geom_histogram()
sand2 <- read.table("C:/R_data/sand_example.csv", header=TRUE, sep=",",
na.strings="NA", dec=".", strip.white=TRUE)
ggplot(data = sand2, aes(x = sand )) + geom_histogram()
plot(depth~sand, data = sand2, ylim =c(50,-1), main = "Total Sand (%) by depth",
xlab = "Sand", ylab = "Depth")
hist(sand2$sand)
#change color and labels
hist(sand2$sand, col = 'blue', main = 'Histogram of Sand Content', xlab = 'Sand Content (%)')
hist(sand2$sand)
hist(sand2$sand, col = 'blue', main = 'Histogram of Sand Content', xlab = 'Sand Content (%)')
#simple histogram
ggplot(data = sand2, aes(x = sand )) + geom_histogram()
#simple histogram
ggplot(data = sand2, aes(x = sand )) + geom_histogram()
#we can control the number of bins
ggplot(data = sand2, aes(x = sand )) + geom_histogram(bins = 10)
#or the width of bins
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 1)
#we can also change the color
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 1, fill = 'blue')
#let's create a boxplot with ggplot
l <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot()
#wait no plot showed up - that's because we assigned the plot the object 'l'
l
#we can add color by assigning fill to a variable
lc <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = landuse))
lc
#we can make a more complicated graph by filling with another variable
lm <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = Master))
lm
#simple histogram
ggplot(data = sand2, aes(x = sand )) + geom_histogram()
#we can control the number of bins
ggplot(data = sand2, aes(x = sand )) + geom_histogram(bins = 10)
#or the width of bins
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 1)
#we can also change the color
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 1, fill = 'blue')
#let's create a boxplot with ggplot
l <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot()
#wait no plot showed up - that's because we assigned the plot the object 'l'
l
#we can add color by assigning fill to a variable
lc <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = landuse))
lc
#we can make a more complicated graph by filling with another variable
lm <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = Master))
lm
library("aqp", lib.loc="~/R/win-library/3.4")
install.packages(c("aplpack", "aqp", "arm", "backports", "bayesm", "broom", "callr", "car", "carData", "caTools", "cetcolor", "circlize", "classInt", "clhs", "cli", "clipr", "coda", "commonmark", "compositions", "covr", "cowplot", "CVST", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "doBy", "dplyr", "dygraphs", "e1071", "energy", "evaluate", "expm", "FactoMineR", "Factoshiny", "Formula", "gdalUtils", "GGally", "ggjoy", "ggmosaic", "ggplot2", "ggpmisc", "ggrepel", "ggridges", "ggthemes", "git2r", "gmodels", "gtools", "haven", "highr", "htmlTable", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "inline", "interplot", "iterators", "jqr", "jsonlite", "knitr", "labelled", "leaflet", "lintr", "lme4", "lmerTest", "lsmeans", "lubridate", "manipulateWidget", "maptools", "mapview", "margins", "markdown", "MASS", "mclust", "microbenchmark", "mime", "miniUI", "modelr", "munsell", "mvtnorm", "naniar", "nloptr", "openssl", "openxlsx", "packrat", "pillar", "pkgconfig", "plotly", "plotrix", "prediction", "processx", "progress", "protolite", "psych", "purrr", "purrrlyr", "quantreg", "questionr", "R.oo", "R.utils", "R6", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "readr", "readstata13", "readxl", "reprex", "reshape", "rgdal", "rgeos", "RgoogleMaps", "rio", "rJava", "rjson", "RJSONIO", "rlang", "rmapshaper", "robustbase", "roxygen2", "rsconnect", "rstan", "sandwich", "scales", "sf", "shiny", "soilDB", "soiltexture", "sourcetools", "sp", "spData", "spdep", "srvyr", "StanHeaders", "stringdist", "stringi", "stringr", "survey", "tables", "tensorA", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tmap", "tmaptools", "units", "useful", "utf8", "vegan", "visdat", "xfun", "xlsx", "XML", "xtable", "xts", "zoo"))
library(aqp)
install.packages(c("agricolae", "BH", "checkmate", "clipr", "colorspace", "cowplot", "curl", "data.table", "dbplyr", "deldir", "gclus", "git2r", "htmlTable", "kableExtra", "openssl", "prabclus", "psych", "raster", "RcppArmadillo", "rlang", "rsconnect", "rstudioapi", "soilDB", "spData", "tibble", "tinytex", "TukeyC"))
lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
sessionInfo()
#if you've used R - we'll clear your session
rm(list = ls(all = TRUE))
#if you've used R before - we'll clear your session
rm (list = ls(all = TRUE))
library(knitr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
#this will tell you information about your current R session
##important for troubleshooting and when asking for help
sessionInfo()
#if you've used R before - we'll clear your session
rm (list = ls(all = TRUE))
library(knitr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
#this will tell you information about your current R session
##important for troubleshooting and when asking for help
sessionInfo()
sand2 <- read.table("C:/R_data/sand_example.csv", header=TRUE, sep=",",
na.strings="NA", dec=".", strip.white=TRUE)
plot(depth~sand, data = sand2, ylim =c(50,-1), main = "Total Sand (%) by depth",
xlab = "Sand", ylab = "Depth")
hist(sand2$sand)
#change color and labels
hist(sand2$sand, col = 'blue', main = 'Histogram of Sand Content', xlab = 'Sand Content (%)')
#simple histogram
ggplot(data = sand2, aes(x = sand )) + geom_histogram()
#we can control the number of bins
ggplot(data = sand2, aes(x = sand )) + geom_histogram(bins = 10)
#or the width of bins
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 1)
#we can also change the color
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 1, fill = 'blue')
#let's create a boxplot with ggplot
l <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot()
#wait no plot showed up - that's because we assigned the plot the object 'l'
l
#we can add color by assigning fill to a variable
lc <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = landuse))
lc
#we can make a more complicated graph by filling with another variable
lm <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = master))
lm
#we can add new command to the exsisting object
#note that was are using fill because that is what's in the aes(), sometimes you'll use scale_color_
lm + scale_fill_brewer(palette = "Set1")
lm + scale_fill_grey()
#Notice that there is a + as you build elements - you can have a return after a comma within a () without a +
#use R studio to help you track and find pairs of '' and ()
#and we can add labels and adjust ticks
lm + scale_fill_grey() + labs(x = "Landuse", y = "Sand Content (%)") +
theme(axis.text.x = element_text(face="bold", color="#993333", size=14, angle=45),
axis.text.y = element_text(face="bold", color="#993333", size=14, angle=45))
#our additions are necessarily better..........
#there are many ways edit graphs for presentations and sharing
#there are many helpful websites
lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(knitr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
sand2 <- read_csv("~/GitHub/stats_for_soil_survey.git/trunk/data/Pre-course/R_sand/sand_example.csv")
View(sand2)
plot(depth~sand, data = sand2, ylim =c(50,-1), main = "Total Sand (%) by depth",
xlab = "Sand", ylab = "Depth")
hist(sand2$sand)
hist(sand2$sand, col = 'red', main = 'Sand Content', xlab = 'Sand Content (%)')
hist(sand2$depth, col = 'red', main = 'Sand Depth', xlab = 'Sand Depth')
#simple histogram
ggplot(data = sand2, aes(x = sand )) + geom_histogram()
#we can control the number of bins
ggplot(data = sand2, aes(x = sand )) + geom_histogram(bins = 10)
#or the width of bins
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 1)
#we can also change the color
ggplot(data = sand2, aes(x = sand )) + geom_histogram(binwidth = 1, fill = 'blue')
#let's create a boxplot with ggplot
l <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot()
#wait no plot showed up - that's because we assigned the plot the object 'l'
l
#we can add color by assigning fill to a variable
lc <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = landuse))
lc
#we can make a more complicated graph by filling with another variable
lm <- b <- ggplot(data = sand2, aes(x = landuse, y = sand)) + geom_boxplot(aes(fill = master))
lm
#we can add new command to the exsisting object
#note that was are using fill because that is what's in the aes(), sometimes you'll use scale_color_
lm + scale_fill_brewer(palette = "Set1")
lm + scale_fill_grey()
#Notice that there is a + as you build elements - you can have a return after a comma within a () without a +
#use R studio to help you track and find pairs of '' and ()
#and we can add labels and adjust ticks
lm + scale_fill_grey() + labs(x = "Landuse", y = "Sand Content (%)") +
theme(axis.text.x = element_text(face="bold", color="#993333", size=14, angle=45),
axis.text.y = element_text(face="bold", color="#993333", size=14, angle=45))
#try things on my own
lm
lm+labs(ggtitle= "Sand Content", y="Sand Content (%)", x="Landuse")+theme(plot.title=element_text(hjust=0.5))+theme_dark()
hist(sand2$sand, freq=TRUE, main=paste("Sand content (%)"), xlim=range(10,40), xlab="Total Sand", ylab="Counts")
#change breaks to alter appearance of the graph
hist(sand2$sand, freq=TRUE, breaks=12, xlim = c(15, 40), main = "Histogram of Sand", sub = "with 12 bins", col ="lightblue", ylab = "Counts", xlab = "Total Sand")
hist(sand2$sand, freq=TRUE, breaks=5, xlim = c(15, 40), main = "Histogram of Sand", sub = "with 5 bins", col ="lightblue", ylab = "Counts", xlab = "Total Sand")
hist(sand2$sand, freq=FALSE, breaks = c(10,15,20,35,40), xlim = c(10, 40), main = "Histogram of Sand", sub = "with predefined bins", col ="lightblue", ylab = "Counts", xlab = "Total Sand")
install.packages("knitr")
